name: Build and push (Alpine)

on:
  workflow_dispatch :

jobs:
  buildx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { php: '7.4-cli-alpine', composer: '2', node: '16.19.0' }
          - { php: 'cli-alpine', composer: 'latest', node: '18.14.0' }
    env:
        PHP_ID: ${{ matrix.php }}
        COMPOSER_ID: ${{ matrix.composer }}
        NODE_ID: ${{ matrix.node }}
    name: Build p:${{ matrix.php }}-c:${{ matrix.composer }}-n:${{ matrix.node }}
    steps:
      - name: Set up env
        run: |
          PHP_ID=$([ -z "${PHP_ID}" ] || [ "${PHP_ID:0:3}" == "cli" ] && echo "latest" || echo "${PHP_ID%%-*}")
          COMPOSER_ID=$([ -z "${COMPOSER_ID}" ] && echo "latest" || echo "${COMPOSER_ID%%.*}")
          NODE_ID=$([ -z "${NODE_ID}" ] || [ "current" == "${NODE_ID}" ] && echo "latest" || echo "${NODE_ID%%.*}")
          echo PHP_ID=${PHP_ID} >> $GITHUB_ENV
          echo COMPOSER_ID=${COMPOSER_ID} >> $GITHUB_ENV
          echo NODE_ID=${NODE_ID} >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:alpine"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-symfony-devenv:p-${{ env.PHP_ID }}-c${{ env.COMPOSER_ID }}-n${{ env.NODE_ID }}-alpine
          build-args: |
              PHP_VERSION=${{ matrix.php }}
              COMPOSER_VERSION=${{ matrix.composer }}
              NODE_VERSION=${{ matrix.node }}
